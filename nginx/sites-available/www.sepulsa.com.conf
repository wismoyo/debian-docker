# Nginx Rules for Phoenix by rawis@sepulsa.com - Aug 2016
# Updated on 22 Feb 2017
# Port 80 diredirect ke 443 paksa!
server {
    listen 80;
    server_name www.sepulsa.com sepulsa.com sepulsa.co.id www.sepulsa.co.id sepulsa.net www.sepulsa.net sepulsa.id www.sepulsa.id beta.sepulsa.com;
    return 301 https://www.sepulsa.com$request_uri;
}

# HTTPS
# Redirect non www ke www.
server {
    listen 443 ssl http2; #Support HTTP/2
    server_name sepulsa.com;

    ## Server certificate and key.
    ssl_certificate /sepulsa/certs/www.sepulsa.com_thawte_ev_2017.crt;
    ssl_certificate_key /sepulsa/certs/www.sepulsa.com_thawte_ev_priv_2017.key;
    ssl_dhparam  /sepulsa/certs/dhparam.pem;
    ssl_session_cache    shared:SSL:2m;
    ssl_session_timeout  10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers  on;

	return 301 https://www.sepulsa.com$request_uri;
}

# HTTPS
server {
    listen 443 ssl http2; #Support HTTP/2
    server_name www.sepulsa.com;

    ## Server certificate and key.
    ssl_certificate /sepulsa/certs/www.sepulsa.com_thawte_ev_2017.crt;
    ssl_certificate_key /sepulsa/certs/www.sepulsa.com_thawte_ev_priv_2017.key;
    ssl_dhparam  /sepulsa/certs/dhparam.pem;

    ssl_session_cache    shared:SSL:2m;
    ssl_session_timeout  10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers  on;

    # Public Doc root
    root /sepulsa/www;

    index index.html;

    # Google public DNS
    resolver 8.8.8.8;

    ## Access and error logs.
    access_log /sepulsa/logs/nginx/www.sepulsa.com_access_ssl.log;
    error_log /sepulsa/logs/nginx/www.sepulsa.com_error_ssl.log;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        allow 192.168.0.0/16;
        deny all;
        access_log off;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    # Exclude this fuckin static URI to redirected
    # include /etc/nginx/custom/excludetoredirect.conf;

    location @rewrite {
        rewrite ^/(.*)$ /index.html last;
    }

    location / {
       #try_files $uri $uri/index.html;
       try_files $uri @rewrite;

       include /etc/nginx/custom/gofrigate.conf;
       include /etc/nginx/custom/noredir.conf;
    }

    # CUSTOM 
    #include /etc/nginx/custom/gofrigate.conf;
    include /etc/nginx/custom/old_agent_redirect.conf;
	include /etc/nginx/custom/blockbotbiadab.conf;
	include /etc/nginx/custom/proxypass_legacy.conf;

    ## No Cache for JS, CSS and several static.
    location ~* ^.+\.(?:css|js|jsx)$ {
        access_log off;
    	add_header  Cache-Control: max-age=86400;
    	add_header  Expires: 1d;
    	tcp_nodelay on;
    }

    ## Static files who will be served directly.
    location ~* ^.+\.(?:cur|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|svg)$ {
        expires 30d;
        add_header Pragma public;
       	add_header Cache-Control 'public, max-age=2592000, stale-while-revalidate=2592000';
        access_log off;
        log_not_found off;
        tcp_nodelay on;
        ## Set the OS file cache.
        open_file_cache max=5000 inactive=200s;
        open_file_cache_valid 200s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;

        try_files $uri @rewrite;
    }

    location /components/ {
        deny all;
        try_files $uri @rewrite;
    }

    location /undefined/ {
       try_files $uri @rewrite;
    }

    ## Custom Block detected BOT activities
    location = /wp-login.php {
        deny all;
        return 404;
        log_not_found off;
        access_log off;
    }

  rewrite ^/hybridauth/(.*)$ https://gaia.sepulsa.com/hybridauth/$1;
 
} # HTTPS server